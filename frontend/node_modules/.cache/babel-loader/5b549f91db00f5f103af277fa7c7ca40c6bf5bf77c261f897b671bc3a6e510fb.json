{"ast":null,"code":"var _jsxFileName = \"/Users/yes/Desktop/movie-radar/frontend/src/components/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport UserReviewCard from \"./UserReviewCard\";\nimport MovieCard from \"./MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [user, setUser] = useState({});\n  const [watchlist, setWatchlist] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const userId = useSelector(state => state.user.userid);\n  const email = useSelector(state => state.user.email);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(`http://localhost:8080/profile/${userId}`).then(res => res.json()).then(data => setUser(data));\n    fetch(`http://localhost:8080/watchlist/${userId}`).then(res => res.json()).then(data => setWatchlist(data));\n    fetch(`http://localhost:8080/user/reviews/${email}`).then(res => res.json()).then(data => {\n      console.log(\"Fetched reviews data:\", data);\n      if (Array.isArray(data)) {\n        setReviews(data.slice(0, 3));\n      } else {\n        console.error(\"Expected an array of reviews, received:\", data);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching user reviews:\", error);\n    });\n  }, [userId, email]);\n  const handleUpvote = async reviewId => {\n    const payload = {\n      userId: email\n    };\n    await fetch(`http://localhost:8080/review/upvote/${reviewId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(updatedReview => {\n      if (updatedReview._id) {\n        setReviews(reviews.map(review => review._id === updatedReview._id ? updatedReview : review));\n      } else {\n        console.error(\"Failed to upvote review:\", updatedReview);\n      }\n    }).catch(error => console.error(\"Error upvoting review:\", error));\n  };\n  const handleRemoveUpvote = async reviewId => {\n    const payload = {\n      userId: email\n    };\n    await fetch(`http://localhost:8080/review/remove-upvote/${reviewId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(updatedReview => {\n      if (updatedReview._id) {\n        setReviews(reviews.map(review => review._id === updatedReview._id ? updatedReview : review));\n      } else {\n        console.error(\"Failed to remove upvote from review:\", updatedReview);\n      }\n    }).catch(error => console.error(\"Error removing upvote from review:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"First Name: \", user.fname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Name: \", user.lname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Watchlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap\",\n      children: watchlist.slice(0, 5).map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => navigate(\"/watchlist\"),\n      children: \"View All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(UserReviewCard, {\n          review: review,\n          onUpvote: handleUpvote,\n          onRemoveUpvote: handleRemoveUpvote\n        }, review._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, review._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => navigate(\"/user-reviews\"),\n      children: \"View All Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"YfXSSDZyIV9rFq8TXGPa2Iudkpg=\", false, function () {\n  return [useSelector, useSelector, useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useNavigate","Button","ListGroup","UserReviewCard","MovieCard","jsxDEV","_jsxDEV","Profile","_s","user","setUser","watchlist","setWatchlist","reviews","setReviews","userId","state","userid","email","navigate","fetch","then","res","json","data","console","log","Array","isArray","slice","error","catch","handleUpvote","reviewId","payload","method","headers","body","JSON","stringify","updatedReview","_id","map","review","handleRemoveUpvote","children","fileName","_jsxFileName","lineNumber","columnNumber","fname","lname","className","movie","onClick","Item","onUpvote","onRemoveUpvote","_c","$RefreshReg$"],"sources":["/Users/yes/Desktop/movie-radar/frontend/src/components/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport UserReviewCard from \"./UserReviewCard\";\nimport MovieCard from \"./MovieCard\";\n\nconst Profile = () => {\n  const [user, setUser] = useState({});\n  const [watchlist, setWatchlist] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const userId = useSelector((state) => state.user.userid);\n  const email = useSelector((state) => state.user.email);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(`http://localhost:8080/profile/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setUser(data));\n\n    fetch(`http://localhost:8080/watchlist/${userId}`)\n      .then((res) => res.json())\n      .then((data) => setWatchlist(data));\n\n    fetch(`http://localhost:8080/user/reviews/${email}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Fetched reviews data:\", data);\n        if (Array.isArray(data)) {\n          setReviews(data.slice(0, 3));\n        } else {\n          console.error(\"Expected an array of reviews, received:\", data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching user reviews:\", error);\n      });\n  }, [userId, email]);\n\n  const handleUpvote = async (reviewId) => {\n    const payload = { userId: email };\n\n    await fetch(`http://localhost:8080/review/upvote/${reviewId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then((updatedReview) => {\n        if (updatedReview._id) {\n          setReviews(\n            reviews.map((review) =>\n              review._id === updatedReview._id ? updatedReview : review\n            )\n          );\n        } else {\n          console.error(\"Failed to upvote review:\", updatedReview);\n        }\n      })\n      .catch((error) => console.error(\"Error upvoting review:\", error));\n  };\n\n  const handleRemoveUpvote = async (reviewId) => {\n    const payload = { userId: email };\n\n    await fetch(`http://localhost:8080/review/remove-upvote/${reviewId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then((updatedReview) => {\n        if (updatedReview._id) {\n          setReviews(\n            reviews.map((review) =>\n              review._id === updatedReview._id ? updatedReview : review\n            )\n          );\n        } else {\n          console.error(\"Failed to remove upvote from review:\", updatedReview);\n        }\n      })\n      .catch((error) =>\n        console.error(\"Error removing upvote from review:\", error)\n      );\n  };\n\n  return (\n    <div>\n      <h1>Profile</h1>\n      <p>First Name: {user.fname}</p>\n      <p>Last Name: {user.lname}</p>\n      <p>Email: {user.email}</p>\n\n      <h2>Watchlist</h2>\n      <div className=\"d-flex flex-wrap\">\n        {watchlist.slice(0, 5).map((movie) => (\n          <MovieCard key={movie._id} movie={movie} />\n        ))}\n      </div>\n      <Button onClick={() => navigate(\"/watchlist\")}>View All</Button>\n\n      <h2>Your Reviews</h2>\n      <ListGroup>\n        {reviews.map((review) => (\n          <ListGroup.Item key={review._id}>\n            <UserReviewCard\n              key={review._id}\n              review={review}\n              onUpvote={handleUpvote}\n              onRemoveUpvote={handleRemoveUpvote}\n            />\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n      <Button onClick={() => navigate(\"/user-reviews\")}>\n        View All Reviews\n      </Button>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMiB,MAAM,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACP,IAAI,CAACQ,MAAM,CAAC;EACxD,MAAMC,KAAK,GAAGnB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACP,IAAI,CAACS,KAAK,CAAC;EACtD,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACduB,KAAK,CAAC,iCAAiCL,MAAM,EAAE,CAAC,CAC7CM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKd,OAAO,CAACc,IAAI,CAAC,CAAC;IAEhCJ,KAAK,CAAC,mCAAmCL,MAAM,EAAE,CAAC,CAC/CM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKZ,YAAY,CAACY,IAAI,CAAC,CAAC;IAErCJ,KAAK,CAAC,sCAAsCF,KAAK,EAAE,CAAC,CACjDG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,IAAI,CAAC;MAC1C,IAAIG,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE;QACvBV,UAAU,CAACU,IAAI,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC9B,CAAC,MAAM;QACLJ,OAAO,CAACK,KAAK,CAAC,yCAAyC,EAAEN,IAAI,CAAC;MAChE;IACF,CAAC,CAAC,CACDO,KAAK,CAAED,KAAK,IAAK;MAChBL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,CAACf,MAAM,EAAEG,KAAK,CAAC,CAAC;EAEnB,MAAMc,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,MAAMC,OAAO,GAAG;MAAEnB,MAAM,EAAEG;IAAM,CAAC;IAEjC,MAAME,KAAK,CAAC,uCAAuCa,QAAQ,EAAE,EAAE;MAC7DE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC,CACCb,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEmB,aAAa,IAAK;MACvB,IAAIA,aAAa,CAACC,GAAG,EAAE;QACrB3B,UAAU,CACRD,OAAO,CAAC6B,GAAG,CAAEC,MAAM,IACjBA,MAAM,CAACF,GAAG,KAAKD,aAAa,CAACC,GAAG,GAAGD,aAAa,GAAGG,MACrD,CACF,CAAC;MACH,CAAC,MAAM;QACLlB,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEU,aAAa,CAAC;MAC1D;IACF,CAAC,CAAC,CACDT,KAAK,CAAED,KAAK,IAAKL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC;EAED,MAAMc,kBAAkB,GAAG,MAAOX,QAAQ,IAAK;IAC7C,MAAMC,OAAO,GAAG;MAAEnB,MAAM,EAAEG;IAAM,CAAC;IAEjC,MAAME,KAAK,CAAC,8CAA8Ca,QAAQ,EAAE,EAAE;MACpEE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC,CACCb,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEmB,aAAa,IAAK;MACvB,IAAIA,aAAa,CAACC,GAAG,EAAE;QACrB3B,UAAU,CACRD,OAAO,CAAC6B,GAAG,CAAEC,MAAM,IACjBA,MAAM,CAACF,GAAG,KAAKD,aAAa,CAACC,GAAG,GAAGD,aAAa,GAAGG,MACrD,CACF,CAAC;MACH,CAAC,MAAM;QACLlB,OAAO,CAACK,KAAK,CAAC,sCAAsC,EAAEU,aAAa,CAAC;MACtE;IACF,CAAC,CAAC,CACDT,KAAK,CAAED,KAAK,IACXL,OAAO,CAACK,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAC3D,CAAC;EACL,CAAC;EAED,oBACExB,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAAuC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB3C,OAAA;MAAAuC,QAAA,GAAG,cAAY,EAACpC,IAAI,CAACyC,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B3C,OAAA;MAAAuC,QAAA,GAAG,aAAW,EAACpC,IAAI,CAAC0C,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9B3C,OAAA;MAAAuC,QAAA,GAAG,SAAO,EAACpC,IAAI,CAACS,KAAK;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1B3C,OAAA;MAAAuC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3C,OAAA;MAAK8C,SAAS,EAAC,kBAAkB;MAAAP,QAAA,EAC9BlC,SAAS,CAACkB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACa,GAAG,CAAEW,KAAK,iBAC/B/C,OAAA,CAACF,SAAS;QAAiBiD,KAAK,EAAEA;MAAM,GAAxBA,KAAK,CAACZ,GAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3C,OAAA,CAACL,MAAM;MAACqD,OAAO,EAAEA,CAAA,KAAMnC,QAAQ,CAAC,YAAY,CAAE;MAAA0B,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhE3C,OAAA;MAAAuC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB3C,OAAA,CAACJ,SAAS;MAAA2C,QAAA,EACPhC,OAAO,CAAC6B,GAAG,CAAEC,MAAM,iBAClBrC,OAAA,CAACJ,SAAS,CAACqD,IAAI;QAAAV,QAAA,eACbvC,OAAA,CAACH,cAAc;UAEbwC,MAAM,EAAEA,MAAO;UACfa,QAAQ,EAAExB,YAAa;UACvByB,cAAc,EAAEb;QAAmB,GAH9BD,MAAM,CAACF,GAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhB;MAAC,GANiBN,MAAM,CAACF,GAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOf,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,eACZ3C,OAAA,CAACL,MAAM;MAACqD,OAAO,EAAEA,CAAA,KAAMnC,QAAQ,CAAC,eAAe,CAAE;MAAA0B,QAAA,EAAC;IAElD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACzC,EAAA,CArHID,OAAO;EAAA,QAIIR,WAAW,EACZA,WAAW,EACRC,WAAW;AAAA;AAAA0D,EAAA,GANxBnD,OAAO;AAuHb,eAAeA,OAAO;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}