{"ast":null,"code":"var _jsxFileName = \"/Users/yes/Desktop/movie-radar/frontend/src/components/UserReviews.jsx\",\n  _s = $RefreshSig$();\n// src/components/UserReviews.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ReviewCard from \"./ReviewCard\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserReviews = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const email = useSelector(state => state.user.email);\n  useEffect(() => {\n    const fetchUserReviews = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/user/reviews/${email}`);\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || \"Failed to fetch reviews\");\n        }\n        const data = await response.json();\n        setReviews(data);\n      } catch (error) {\n        console.error(\"Error fetching user reviews:\", error);\n        setError(error.message);\n      }\n    };\n    if (email) {\n      fetchUserReviews();\n    }\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No reviews found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : reviews.map(review => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(ReviewCard, {\n          review: review,\n          onUpvote: () => {},\n          onRemoveUpvote: () => {},\n          canDelete: false // Not allowing delete in this view for now\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, review._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UserReviews, \"D8EpnDTVeCiDECQu47iUoiJI3rs=\", false, function () {\n  return [useSelector];\n});\n_c = UserReviews;\nexport default UserReviews;\nvar _c;\n$RefreshReg$(_c, \"UserReviews\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","ReviewCard","Container","Row","Col","jsxDEV","_jsxDEV","UserReviews","_s","reviews","setReviews","error","setError","email","state","user","fetchUserReviews","response","fetch","ok","errorData","json","Error","message","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","review","xs","md","lg","onUpvote","onRemoveUpvote","canDelete","_id","_c","$RefreshReg$"],"sources":["/Users/yes/Desktop/movie-radar/frontend/src/components/UserReviews.jsx"],"sourcesContent":["// src/components/UserReviews.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ReviewCard from \"./ReviewCard\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst UserReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const email = useSelector((state) => state.user.email);\n\n  useEffect(() => {\n    const fetchUserReviews = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:8080/user/reviews/${email}`\n        );\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || \"Failed to fetch reviews\");\n        }\n        const data = await response.json();\n        setReviews(data);\n      } catch (error) {\n        console.error(\"Error fetching user reviews:\", error);\n        setError(error.message);\n      }\n    };\n\n    if (email) {\n      fetchUserReviews();\n    }\n  }, [email]);\n\n  return (\n    <Container>\n      <h1>Your Reviews</h1>\n      {error && <p className=\"text-danger\">Error: {error}</p>}\n      <Row>\n        {reviews.length === 0 ? (\n          <p>No reviews found</p>\n        ) : (\n          reviews.map((review) => (\n            <Col key={review._id} xs={12} md={6} lg={4}>\n              <ReviewCard\n                review={review}\n                onUpvote={() => {}}\n                onRemoveUpvote={() => {}}\n                canDelete={false} // Not allowing delete in this view for now\n              />\n            </Col>\n          ))\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default UserReviews;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMc,KAAK,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EAEtDf,SAAS,CAAC,MAAM;IACd,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sCAAsCL,KAAK,EAC7C,CAAC;QACD,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,yBAAyB,CAAC;QACjE;QACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCX,UAAU,CAACc,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdc,OAAO,CAACd,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;MACzB;IACF,CAAC;IAED,IAAIV,KAAK,EAAE;MACTG,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEP,OAAA,CAACJ,SAAS;IAAAwB,QAAA,gBACRpB,OAAA;MAAAoB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBnB,KAAK,iBAAIL,OAAA;MAAGyB,SAAS,EAAC,aAAa;MAAAL,QAAA,GAAC,SAAO,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDxB,OAAA,CAACH,GAAG;MAAAuB,QAAA,EACDjB,OAAO,CAACuB,MAAM,KAAK,CAAC,gBACnB1B,OAAA;QAAAoB,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEvBrB,OAAO,CAACwB,GAAG,CAAEC,MAAM,iBACjB5B,OAAA,CAACF,GAAG;QAAkB+B,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAX,QAAA,eACzCpB,OAAA,CAACL,UAAU;UACTiC,MAAM,EAAEA,MAAO;UACfI,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAE;UACnBC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAE;UACzBC,SAAS,EAAE,KAAM,CAAC;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC,GANMI,MAAM,CAACO,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOf,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACtB,EAAA,CAlDID,WAAW;EAAA,QAGDP,WAAW;AAAA;AAAA0C,EAAA,GAHrBnC,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}