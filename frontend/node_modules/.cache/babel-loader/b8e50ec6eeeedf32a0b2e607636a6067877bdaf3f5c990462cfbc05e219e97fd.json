{"ast":null,"code":"var _jsxFileName = \"/Users/yes/Desktop/movie-radar/frontend/src/components/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport WatchList from \"./WatchList\";\nimport SearchBar from \"./SearchBar\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genres = [{\n  id: 28,\n  name: \"Action\"\n}, {\n  id: 12,\n  name: \"Adventure\"\n}, {\n  id: 16,\n  name: \"Animation\"\n}, {\n  id: 35,\n  name: \"Comedy\"\n}, {\n  id: 80,\n  name: \"Crime\"\n}, {\n  id: 99,\n  name: \"Documentary\"\n}, {\n  id: 18,\n  name: \"Drama\"\n}, {\n  id: 10751,\n  name: \"Family\"\n}, {\n  id: 14,\n  name: \"Fantasy\"\n}, {\n  id: 36,\n  name: \"History\"\n}, {\n  id: 27,\n  name: \"Horror\"\n}, {\n  id: 10402,\n  name: \"Music\"\n}, {\n  id: 9648,\n  name: \"Mystery\"\n}, {\n  id: 10749,\n  name: \"Romance\"\n}, {\n  id: 878,\n  name: \"Science Fiction\"\n}, {\n  id: 10770,\n  name: \"TV Movie\"\n}, {\n  id: 53,\n  name: \"Thriller\"\n}, {\n  id: 10752,\n  name: \"War\"\n}, {\n  id: 37,\n  name: \"Western\"\n}];\nfunction Home() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const updateSearch = name => {\n    setSearch(name);\n  };\n\n  //updated fetchMovies to handle filter by genre\n  const fetchMovies = useCallback(() => {\n    let url = \"http://localhost:8080/movie\";\n    if (selectedGenre) {\n      url += `?genre=${selectedGenre}`;\n    }\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Access-Control-Allow-Origin\": true,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(res => setMovies(res)).catch(error => console.error(\"Error fetching movies:\", error));\n  }, [selectedGenre]);\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n\n  //filter movies based on search and genre\n  const filteredMovies = movies.slice(0, 300).filter(movie => movie.title.toLowerCase().includes(search.toLowerCase()) || movie.overview.toLowerCase().includes(search.toLowerCase())).filter(movie => selectedGenre ? movie.genre_ids.includes(parseInt(selectedGenre)) : true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WatchList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: \"50px\",\n        textAlign: \"center\",\n        fontSize: \"48px\"\n      },\n      children: \"Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"block\",\n        textAlign: \"center\",\n        fontSize: \"14px\"\n      },\n      children: \"(Credits: Movie data taken from themoviedb)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-genre-container\",\n      style: {\n        margin: \"20px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        setSearch: updateSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre-filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          style: {\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            marginRight: \"10px\"\n          },\n          children: \"Filter by Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: selectedGenre,\n          onChange: e => setSelectedGenre(e.target.value),\n          style: {\n            width: \"200px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.id,\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie,\n            title: movie.title,\n            overview: movie.overview,\n            picture: movie.picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"GzSX5XetIAXlh6cghTmg2w+aV+o=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","MovieCard","WatchList","SearchBar","Form","jsxDEV","_jsxDEV","genres","id","name","Home","_s","movies","setMovies","search","setSearch","selectedGenre","setSelectedGenre","updateSearch","fetchMovies","url","fetch","method","headers","then","res","json","catch","error","console","filteredMovies","slice","filter","movie","title","toLowerCase","includes","overview","genre_ids","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","textAlign","fontSize","display","className","margin","Label","fontWeight","marginRight","Control","as","value","onChange","e","target","width","map","genre","picture","_c","$RefreshReg$"],"sources":["/Users/yes/Desktop/movie-radar/frontend/src/components/Home.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport WatchList from \"./WatchList\";\nimport SearchBar from \"./SearchBar\";\nimport { Form } from \"react-bootstrap\";\n\nconst genres = [\n  { id: 28, name: \"Action\" },\n  { id: 12, name: \"Adventure\" },\n  { id: 16, name: \"Animation\" },\n  { id: 35, name: \"Comedy\" },\n  { id: 80, name: \"Crime\" },\n  { id: 99, name: \"Documentary\" },\n  { id: 18, name: \"Drama\" },\n  { id: 10751, name: \"Family\" },\n  { id: 14, name: \"Fantasy\" },\n  { id: 36, name: \"History\" },\n  { id: 27, name: \"Horror\" },\n  { id: 10402, name: \"Music\" },\n  { id: 9648, name: \"Mystery\" },\n  { id: 10749, name: \"Romance\" },\n  { id: 878, name: \"Science Fiction\" },\n  { id: 10770, name: \"TV Movie\" },\n  { id: 53, name: \"Thriller\" },\n  { id: 10752, name: \"War\" },\n  { id: 37, name: \"Western\" },\n];\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n\n  const updateSearch = (name) => {\n    setSearch(name);\n  };\n\n  //updated fetchMovies to handle filter by genre\n  const fetchMovies = useCallback(() => {\n    let url = \"http://localhost:8080/movie\";\n    if (selectedGenre) {\n      url += `?genre=${selectedGenre}`;\n    }\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Access-Control-Allow-Origin\": true,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => setMovies(res))\n      .catch((error) => console.error(\"Error fetching movies:\", error));\n  }, [selectedGenre]);\n\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n\n  //filter movies based on search and genre\n  const filteredMovies = movies.slice(0,300)\n    .filter(\n      (movie) =>\n        movie.title.toLowerCase().includes(search.toLowerCase()) ||\n        movie.overview.toLowerCase().includes(search.toLowerCase())\n    )\n    .filter((movie) =>\n      selectedGenre ? movie.genre_ids.includes(parseInt(selectedGenre)) : true\n    );\n\n  return (\n    <div>\n      <div>\n        <WatchList />\n      </div>\n      <h1 style={{ marginTop: \"50px\", textAlign: \"center\", fontSize: \"48px\" }}>\n        Movie List\n      </h1>\n      <span style={{ display: \"block\", textAlign: \"center\", fontSize: \"14px\" }}>\n        (Credits: Movie data taken from themoviedb)\n      </span>\n      <div className=\"search-genre-container\" style={{ margin: \"20px auto\" }}>\n        <SearchBar setSearch={updateSearch} />\n        <div className=\"genre-filter-container\">\n          <Form.Label\n            style={{\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n              marginRight: \"10px\",\n            }}\n          >\n            Filter by Genre:\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            value={selectedGenre}\n            onChange={(e) => setSelectedGenre(e.target.value)}\n            style={{ width: \"200px\" }}\n          >\n            <option value=\"\">All Genres</option>\n            {genres.map((genre) => (\n              <option key={genre.id} value={genre.id}>\n                {genre.name}\n              </option>\n            ))}\n          </Form.Control>\n        </div>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <div className=\"d-flex flex-wrap\">\n          {filteredMovies.map((movie) => (\n            <div key={movie.id}>\n              <MovieCard\n                movie={movie}\n                title={movie.title}\n                overview={movie.overview}\n                picture={movie.picture}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}